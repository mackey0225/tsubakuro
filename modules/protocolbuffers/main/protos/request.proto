syntax = "proto3";

package request;

import "common.proto";

option java_package = "com.nautilus_technologies.tsubakuro.sql";
option java_outer_classname = "RequestProtos";

/*
 * Definition of sub fields for Request.
 */

/* For host variable consisting of name and type. */
message PlaceHolder {
  message Variable {
    string name = 1;
    common.DataType type = 2;
  }

  repeated Variable Variables = 1;
}

/* For set of parameters passed when executing prepared statements. */
message ParameterSet {
  message Parameter {
    string name = 1;
    oneof value {
      int32 i_value = 2;
      int64 l_value = 3;
      float f_value = 4;
      double d_value = 5;
      string s_value = 6;
    }
  }

  repeated Parameter Parameters = 1;
}

/*
 * Each request message
 */

/* For connect request sent on the common wire of sql service. */
message Connect {
}

/* For begin request. */
message Begin {
  bool read_only = 1;
}

/* For prepare request. */
message Prepare {
  string sql = 1;
  PlaceHolder host_valiables = 2;
}

/* For execute statement request. */
message ExecuteStatement {
  common.Transaction transaction_handle = 1;
  string sql = 2;
}

/* For execute query request. */
message ExecuteQuery {
  common.Transaction transaction_handle = 1;
  string sql = 2;
}

/* For execute prepared statement request. */
message ExecutePreparedStatement {
  common.Transaction transaction_handle = 1;
  common.PreparedStatement prepared_statement_handle = 2;
  ParameterSet parameters = 3;
}

/* For execute prepared query request. */
message ExecutePreparedQuery {
  common.Transaction transaction_handle = 1;
  common.PreparedStatement prepared_statement_handle = 2;
  ParameterSet parameters = 3;
}

/* For commit request. */
message Commit {
  common.Transaction transaction_handle = 1;
}

/* For rollback request. */
message Rollback {
  common.Transaction transaction_handle = 1;
}

/* For request message to the SQL service. */
message Request {
  common.Session session_handle = 1;
  oneof request {
    Prepare prepare = 2;
    ExecuteStatement execute_statement = 3;
    ExecuteQuery execute_query = 4;
    ExecutePreparedStatement execute_prepared_statement = 5;
    ExecutePreparedQuery execute_prepared_query = 6;
    Begin begin = 7;
    Commit commit = 8;
    Rollback rollback = 9;
  }
}
