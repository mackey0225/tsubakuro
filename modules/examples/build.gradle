plugins {
    id 'application'
    id 'tsubakuro.java-conventions'
}

dependencies {
    implementation 'org.msgpack:msgpack-core:0.8.24'
    implementation 'commons-cli:commons-cli:1.4'
    implementation 'org.slf4j:slf4j-simple:1.7.32'

    implementation project(':session')
    implementation project(':common')
    implementation project(':ipc')
    implementation project(':stream')
    implementation project(':connector')
}

application {
    mainClass.set('com.nautilus_technologies.tsubakuro.examples.Main')
}

run {
    systemProperty 'java.library.path', "$project.projectDir/../ipc/src/main/native/build/src"
    jvmArgs = ['--add-opens=java.base/java.nio=ALL-UNNAMED']
}

compileJava {
    options.compilerArgs << '-Xlint:deprecation'
}

spotbugs {
    excludeFilter = file("$projectDir/config/spotbugs/spotbugsExclude.xml")
}

tasks.register('runExample', JavaExec) {
    dependsOn ':ipc:assemble'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty 'java.library.path', "$project.projectDir/../ipc/src/main/native/build/src"
    mainClass = 'com.nautilus_technologies.tsubakuro.examples.Main'
    jvmArgs = ['--add-opens=java.base/java.nio=ALL-UNNAMED']
}

tasks.register('runTpcc', JavaExec) {
    dependsOn ':ipc:assemble'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty 'java.library.path', "$project.projectDir/../ipc/src/main/native/build/src"
    mainClass = 'com.nautilus_technologies.tsubakuro.examples.tpcc.Main'
    jvmArgs = ['--add-opens=java.base/java.nio=ALL-UNNAMED']
}

tasks.register('runPm', JavaExec) {
    dependsOn ':ipc:assemble'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty 'java.library.path', "$project.projectDir/../ipc/src/main/native/build/src"
    mainClass = 'com.nautilus_technologies.tsubakuro.examples.measurement.Main'
    jvmArgs = ['-Xms1024m', '-Xmx4096m', '-XX:+PreserveFramePointer', '--add-opens=java.base/java.nio=ALL-UNNAMED']
}

tasks.register('runWarehouse', JavaExec) {
    dependsOn ':ipc:assemble'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty 'java.library.path', "$project.projectDir/../ipc/src/main/native/build/src"
    mainClass = 'com.nautilus_technologies.tsubakuro.examples.warehouse.Main'
    jvmArgs = ['--add-opens=java.base/java.nio=ALL-UNNAMED']
}

tasks.register('runIc', JavaExec) {
    dependsOn ':ipc:assemble'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty 'java.library.path', "$project.projectDir/../ipc/src/main/native/build/src"
    mainClass = 'com.nautilus_technologies.tsubakuro.examples.concurrent.Main'
    jvmArgs = ['--add-opens=java.base/java.nio=ALL-UNNAMED']
}

tasks.register('runTpch', JavaExec) {
    dependsOn ':ipc:assemble'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty 'java.library.path', "$project.projectDir/../ipc/src/main/native/build/src"
    mainClass = 'com.nautilus_technologies.tsubakuro.examples.tpch.Main'
    jvmArgs = ['--add-opens=java.base/java.nio=ALL-UNNAMED']
}

tasks.register('runDumpLoad', JavaExec) {
    dependsOn ':ipc:assemble'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty 'java.library.path', "$project.projectDir/../ipc/src/main/native/build/src"
    mainClass = 'com.nautilus_technologies.tsubakuro.examples.dumpload.Main'
    jvmArgs = ['--add-opens=java.base/java.nio=ALL-UNNAMED']
}

tasks.register('runBackup', JavaExec) {
    dependsOn ':ipc:assemble'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty 'java.library.path', "$project.projectDir/../ipc/src/main/native/build/src"
    mainClass = 'com.nautilus_technologies.tsubakuro.examples.datastore.Main'
    jvmArgs = ['--add-opens=java.base/java.nio=ALL-UNNAMED']
}
